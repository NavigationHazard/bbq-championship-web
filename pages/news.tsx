import Head from 'next/head'
import {GraphQLClient, gql} from 'graphql-request'
import NavigationBar from '../components/NavigationBar';
import BlogCard from '../components/BlogCard';
import Footer from '../components/Footer';
const graphcms = new GraphQLClient("https://api-eu-central-1-shared-euc1-02.hygraph.com/v2/clc4i967301ju01ulcopm3cft/master");

const QUERY = gql`
    {
        posts{
            id,
            title,
            category,
            shortDescription,
            slug,
                content{
                    html
                },
                coverPhoto {
                    id,
                    url
                },
                author {
                    id,
                    name,
                    avatar{
                        id,
                        url
                    }
                },
                datePublished
        }
  }
`

export async function getStaticProps(){
    const {posts} = await graphcms.request(QUERY);
    return {
            props:{
                posts,
                },
                revalidate: 10,
        };
    }

export default function Home({posts}) {
   
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='px-16 bg-black/25'>

            <NavigationBar/>
            
            <div className='flex lg:flex-nowrap flex-wrap bg-black/25'>
                <div className='bg-grill4 bg-cover bg-repeat-x  lg:w-5/12 w-full '><div className='flex gap-10  px-8 py-4 text-orange-400 font-bold text-4xl items-center justify-start bg-black/25'>
                        <h3>Aktuelle News</h3>
                     </div>
                </div>
            <div className='lg:flex  w-full justify-between'>
                     
                <div className='py-4 bg-black/25'> 
                {posts.map((post) =>(
                    <BlogCard
                    category = {post.category}
                    title ={post.title} 
                    author={post.author} 
                    coverPhoto={post.coverPhoto} 
                    short={post.shortDescription}
                    key={post.id} 
                    datePublished={post.datePublished} 
                    slug={post.slug}  />
                ))}
                </div>
                
                
            </div></div>
            <Footer/>
              
              
        </main>
    </>
  )
}
